apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "inferno.fullname" . }}
  labels:
    {{- include "inferno.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "inferno.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "inferno.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "inferno.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          tty: true
          {{- if .Values.command }}
          command: {{ .Values.command }}
          {{- end }}
          {{- if .Values.args }}
          args: {{ .Values.args }}
          {{- end }}
          env:          
            {{- range .Values.env }}
            - name: "{{ .name }}"
              value: "{{ .value }}"
            {{- end }}
          ports:
            - name: 9p
              containerPort: 1918
              protocol: TCP
       
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: devfuse
              mountPath: /dev/fuse
            {{- range $k, $v := .Values.files }} 
            - name: configmap-volume
              mountPath: {{ $v.path }}
              subPath: {{ $k }}
            {{- end }}
            {{- if .Values.storage }}
            - name: storage
              mountPath: {{ .Values.storage.mountPath }}
            {{- end }}
            {{- if .Values.initWithGit }}
            - name: export
              mountPath: {{ .Values.initWithGit.mountPath }}
            {{- end }}
      {{- if .Values.initWithGit }}
      initContainers:
        - name: init-git-clone
          image: alpine/git
          command: ['sh', '-c', 'git clone --depth=1 {{ .Values.initWithGit.URL }} /init-fs && rm -rf /init-fs/.git']
          volumeMounts: 
          - mountPath: /init-fs
            name: export    
      {{- end }}

      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: configmap-volume
          configMap: 
            name: {{ .Release.Name }}-configmap
        - name: devfuse
          hostPath:
            path: /dev/fuse
      {{- if .Values.storage }}
        - name: storage
          persistentVolumeClaim:
            claimName: pvc-{{ include "inferno.fullname" . }} 
      {{- end }}
      {{- if .Values.initWithGit }}
        - name: export
          emptyDir: {}
      {{- end }}
      
      
