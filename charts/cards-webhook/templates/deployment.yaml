apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "project-webhook.fullname" . }}
  labels:
    {{- include "project-webhook.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: 1
{{- end }}
  selector:
    matchLabels:
      {{- include "project-webhook.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "project-webhook.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "project-webhook.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          env:          
          - name: GITHUB_USER
            valueFrom:
              secretKeyRef:
                key:  GITHUB_USER
                name: {{ .Release.Name }}-auth
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                key:  GITHUB_TOKEN
                name: {{ .Release.Name }}-auth
          - name: GITHUB_WEBHOOK_SECRET
            valueFrom:
              secretKeyRef:
                key:  GITHUB_WEBHOOK_SECRET
                name: {{ .Release.Name }}-auth
          - name: GITHUB_TG_CHAT_ID
            valueFrom:
              secretKeyRef:
                key:  GITHUB_TG_CHAT_ID
                name: {{ .Release.Name }}-auth
          - name: GITHUB_TG_BOT_TOKEN
            valueFrom:
              secretKeyRef:
                key:  GITHUB_TG_BOT_TOKEN
                name: {{ .Release.Name }}-auth  
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
